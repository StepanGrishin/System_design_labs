version: "3.9"

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  
  mongodb:
    image: mongo:5.0
    container_name: mongodb_grishin
    restart: on-failure
    volumes:
      - mongodbdata:/data/db
      - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    ports:
      - "27017:27017"

  redis:
    image: redis:6
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.1
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "kafka:9092"]
      interval: 10s
      timeout: 5s
      retries: 5


  web:
    build: .
    environment:
      DATABASE_URL: postgresql://postgres:secret@db:5432/postgres
      REDIS_URL: redis://redis:6379
      KAFKA_BROKER_URL: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
      db:
        condition: service_started
      redis:
        condition: service_started

    ports:
      - "8000:8000"

volumes:
  postgres_data:
  mongodbdata:
  redisdata:
